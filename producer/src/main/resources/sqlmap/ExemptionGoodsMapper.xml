<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fulihui.redisdubbo.demo.producer.dal.dao.ExemptionGoodsMapper">
  <resultMap id="BaseResultMap" type="com.fulihui.redisdubbo.demo.producer.dal.dataobj.ExemptionGoods">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="activity_id" jdbcType="INTEGER" property="activityId" />
    <result column="goods_id" jdbcType="BIGINT" property="goodsId" />
    <result column="exemption_goods_name" jdbcType="VARCHAR" property="exemptionGoodsName" />
    <result column="goods_desc" jdbcType="VARCHAR" property="goodsDesc" />
    <result column="pay_amount" jdbcType="INTEGER" property="payAmount" />
    <result column="back_amount" jdbcType="INTEGER" property="backAmount" />
    <result column="exemption_num" jdbcType="INTEGER" property="exemptionNum" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="surplus_num" jdbcType="INTEGER" property="surplusNum" />
    <result column="receive_num" jdbcType="INTEGER" property="receiveNum" />
    <result column="order_quantity_num" jdbcType="INTEGER" property="orderQuantityNum" />
    <result column="gmt_receive" jdbcType="TIMESTAMP" property="gmtReceive" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, activity_id, goods_id, exemption_goods_name, goods_desc, pay_amount, back_amount, 
    exemption_num, state, sort, gmt_create, gmt_modified, surplus_num, receive_num, order_quantity_num, 
    gmt_receive
  </sql>
  <select id="selectByExample" parameterType="com.fulihui.redisdubbo.demo.producer.dal.dataobj.ExemptionGoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exemption_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exemption_goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exemption_goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fulihui.redisdubbo.demo.producer.dal.dataobj.ExemptionGoodsExample">
    delete from exemption_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.fulihui.redisdubbo.demo.producer.dal.dataobj.ExemptionGoods" useGeneratedKeys="true">
    insert into exemption_goods (activity_id, goods_id, exemption_goods_name, 
      goods_desc, pay_amount, back_amount, 
      exemption_num, state, sort, 
      gmt_create, gmt_modified, surplus_num, 
      receive_num, order_quantity_num, gmt_receive
      )
    values (#{activityId,jdbcType=INTEGER}, #{goodsId,jdbcType=BIGINT}, #{exemptionGoodsName,jdbcType=VARCHAR}, 
      #{goodsDesc,jdbcType=VARCHAR}, #{payAmount,jdbcType=INTEGER}, #{backAmount,jdbcType=INTEGER}, 
      #{exemptionNum,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{surplusNum,jdbcType=INTEGER}, 
      #{receiveNum,jdbcType=INTEGER}, #{orderQuantityNum,jdbcType=INTEGER}, #{gmtReceive,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.fulihui.redisdubbo.demo.producer.dal.dataobj.ExemptionGoods" useGeneratedKeys="true">
    insert into exemption_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="exemptionGoodsName != null">
        exemption_goods_name,
      </if>
      <if test="goodsDesc != null">
        goods_desc,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="backAmount != null">
        back_amount,
      </if>
      <if test="exemptionNum != null">
        exemption_num,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="surplusNum != null">
        surplus_num,
      </if>
      <if test="receiveNum != null">
        receive_num,
      </if>
      <if test="orderQuantityNum != null">
        order_quantity_num,
      </if>
      <if test="gmtReceive != null">
        gmt_receive,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="activityId != null">
        #{activityId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="exemptionGoodsName != null">
        #{exemptionGoodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsDesc != null">
        #{goodsDesc,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=INTEGER},
      </if>
      <if test="backAmount != null">
        #{backAmount,jdbcType=INTEGER},
      </if>
      <if test="exemptionNum != null">
        #{exemptionNum,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="surplusNum != null">
        #{surplusNum,jdbcType=INTEGER},
      </if>
      <if test="receiveNum != null">
        #{receiveNum,jdbcType=INTEGER},
      </if>
      <if test="orderQuantityNum != null">
        #{orderQuantityNum,jdbcType=INTEGER},
      </if>
      <if test="gmtReceive != null">
        #{gmtReceive,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fulihui.redisdubbo.demo.producer.dal.dataobj.ExemptionGoodsExample" resultType="java.lang.Long">
    select count(*) from exemption_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exemption_goods
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.activityId != null">
        activity_id = #{record.activityId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=BIGINT},
      </if>
      <if test="record.exemptionGoodsName != null">
        exemption_goods_name = #{record.exemptionGoodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsDesc != null">
        goods_desc = #{record.goodsDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.payAmount != null">
        pay_amount = #{record.payAmount,jdbcType=INTEGER},
      </if>
      <if test="record.backAmount != null">
        back_amount = #{record.backAmount,jdbcType=INTEGER},
      </if>
      <if test="record.exemptionNum != null">
        exemption_num = #{record.exemptionNum,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.surplusNum != null">
        surplus_num = #{record.surplusNum,jdbcType=INTEGER},
      </if>
      <if test="record.receiveNum != null">
        receive_num = #{record.receiveNum,jdbcType=INTEGER},
      </if>
      <if test="record.orderQuantityNum != null">
        order_quantity_num = #{record.orderQuantityNum,jdbcType=INTEGER},
      </if>
      <if test="record.gmtReceive != null">
        gmt_receive = #{record.gmtReceive,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exemption_goods
    set id = #{record.id,jdbcType=INTEGER},
      activity_id = #{record.activityId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=BIGINT},
      exemption_goods_name = #{record.exemptionGoodsName,jdbcType=VARCHAR},
      goods_desc = #{record.goodsDesc,jdbcType=VARCHAR},
      pay_amount = #{record.payAmount,jdbcType=INTEGER},
      back_amount = #{record.backAmount,jdbcType=INTEGER},
      exemption_num = #{record.exemptionNum,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      surplus_num = #{record.surplusNum,jdbcType=INTEGER},
      receive_num = #{record.receiveNum,jdbcType=INTEGER},
      order_quantity_num = #{record.orderQuantityNum,jdbcType=INTEGER},
      gmt_receive = #{record.gmtReceive,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fulihui.redisdubbo.demo.producer.dal.dataobj.ExemptionGoods">
    update exemption_goods
    <set>
      <if test="activityId != null">
        activity_id = #{activityId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="exemptionGoodsName != null">
        exemption_goods_name = #{exemptionGoodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsDesc != null">
        goods_desc = #{goodsDesc,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=INTEGER},
      </if>
      <if test="backAmount != null">
        back_amount = #{backAmount,jdbcType=INTEGER},
      </if>
      <if test="exemptionNum != null">
        exemption_num = #{exemptionNum,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="surplusNum != null">
        surplus_num = #{surplusNum,jdbcType=INTEGER},
      </if>
      <if test="receiveNum != null">
        receive_num = #{receiveNum,jdbcType=INTEGER},
      </if>
      <if test="orderQuantityNum != null">
        order_quantity_num = #{orderQuantityNum,jdbcType=INTEGER},
      </if>
      <if test="gmtReceive != null">
        gmt_receive = #{gmtReceive,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fulihui.redisdubbo.demo.producer.dal.dataobj.ExemptionGoods">
    update exemption_goods
    set activity_id = #{activityId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=BIGINT},
      exemption_goods_name = #{exemptionGoodsName,jdbcType=VARCHAR},
      goods_desc = #{goodsDesc,jdbcType=VARCHAR},
      pay_amount = #{payAmount,jdbcType=INTEGER},
      back_amount = #{backAmount,jdbcType=INTEGER},
      exemption_num = #{exemptionNum,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      surplus_num = #{surplusNum,jdbcType=INTEGER},
      receive_num = #{receiveNum,jdbcType=INTEGER},
      order_quantity_num = #{orderQuantityNum,jdbcType=INTEGER},
      gmt_receive = #{gmtReceive,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>